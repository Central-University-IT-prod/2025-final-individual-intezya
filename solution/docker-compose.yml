services:
  postgres:
    image: postgres:17
    restart: on-failure
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost" ]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "REDACTED:9000:9000"
    command: server --console-address ":9090" /data
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      retries: 3
      start_period: 5s
      timeout: 10s

  backend:
    image: solution:latest
    build:
      context: .
      args:
        DOCKER_BUILDKIT: 1
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MINIO_HOST: minio:9000
      POSTGRES_HOST: postgres:5432
    ports:
      - "REDACTED:8080:8080"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  postgres_data:
  minio_data:
